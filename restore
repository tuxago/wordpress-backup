#!/bin/bash

if ! [[ $1 ]]
then
    echo "Error: Backup name missing"
    echo "Please specify a backup name, e.g. 'restore 20141104'"
    echo "Finished: FAILURE"
    exit 1
fi

if [ -z "$MYSQL_ENV_MYSQL_USER" ]; then echo "Error: MYSQL_ENV_MYSQL_USER not set"; echo "Finished: FAILURE"; exit 1; fi
if [ -z "$MYSQL_ENV_MYSQL_DATABASE" ]; then echo "Error: MYSQL_ENV_MYSQL_DATABASE not set"; echo "Finished: FAILURE"; exit 1; fi
if [ -z "$MYSQL_ENV_MYSQL_PASSWORD" ]; then echo "Error: MYSQL_ENV_MYSQL_PASSWORD not set"; echo "Finished: FAILURE"; exit 1; fi
if [ -z "$MYSQL_PORT_3306_TCP_PORT" ]; then echo "Error: MYSQL_PORT_3306_TCP_PORT not set"; echo "Finished: FAILURE"; exit 1; fi

if ! [[ $1 =~ ^[a-zA-Z0-9_-]+$ ]]
then
  echo "The given backup name does not match the expected pattern: only characters, digits, underscore and dash are allowed ([a-zA-Z0-9_-])."
  echo 'Finished: FAILURE'
  exit 1
fi

FILES_ARCHIVE="/backups/backup_$1.tar.gz"
SQL_ARCHIVE="/backups/backup_$1.sql.bz2"

if [[ ! -f $FILES_ARCHIVE ]]
then
  echo "The file $FILES_ARCHIVE does not exist. Aborting."
  echo "Finished: FAILURE."
  exit 1
fi

if [[ ! -f $SQL_ARCHIVE ]]
then
  echo "The file $SQL_ARCHIVE does not exist. Aborting."
  echo "Finished: FAILURE."
  exit 1
fi

BASE_DIR=/var/www/html/wp-content
DIRS_TO_RESTORE=(uploads)

for d in ${DIRS_TO_RESTORE[*]}
do
    # cleanup html folder
    echo "deleting files from $BASE_DIR/$d"
    rm -R $BASE_DIR/$d/*

    if [ ! -d $BASE_DIR/$d ]
    then
        mkdir $BASE_DIR/$d -p
    fi
done

# restore files
echo "restoring files from $FILES_ARCHIVE to $BASE_DIR"
tar -xzf $FILES_ARCHIVE --directory="$BASE_DIR"

# set correct file owner
chown -R www-data:www-data /var/www/html

# restore database
echo "restoring data from mysql dump file $SQL_ARCHIVE"
bunzip2 < $SQL_ARCHIVE | mysql -u$MYSQL_ENV_MYSQL_USER -p $MYSQL_ENV_MYSQL_DATABASE -p$MYSQL_ENV_MYSQL_PASSWORD -h $DB_HOST

echo 'Finished: SUCCESS'
